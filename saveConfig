-- AutoSaveConfig Module
local SaveManager = {}

-- Ensure exploit supports file system functions
if not writefile or not readfile or not isfile then
    error("SaveManager requires an exploit with file system support (writefile, readfile, isfile)")
end

-- File name for saving configurations
local configFileName = "UserConfig.json"

-- Default configuration (edit this to suit your needs)
local DEFAULT_CONFIG = {
    ToggleState = false,
    ButtonState = false,
    OtherSetting = "default"
}

-- Load configuration from file
function SaveManager:Load()
    if isfile(configFileName) then
        local success, data = pcall(function()
            return game:GetService("HttpService"):JSONDecode(readfile(configFileName))
        end)

        if success and data then
            return data
        end
    end

    -- Return default config if no file exists or failed to load
    return DEFAULT_CONFIG
end

-- Save configuration to file
function SaveManager:Save(config)
    local success, result = pcall(function()
        local jsonData = game:GetService("HttpService"):JSONEncode(config)
        writefile(configFileName, jsonData)
    end)

    if not success then
        warn("Failed to save config: " .. tostring(result))
    end
end

return SaveManager
